#BlueJ class context
comment0.target=BabyBirths
comment1.params=parser
comment1.target=void\ totalBirths(org.apache.commons.csv.CSVParser)
comment1.text=\r\n\ Print\ the\ number\ of\ unique\ girls\ names\ ,\ \r\n\ the\ number\ of\ unique\ boys\ names\ and\ the\ total\ names\ in\ the\ file.\r\n
comment10.params=
comment10.target=void\ testyearOfHighestRank()
comment11.params=name\ gender
comment11.target=double\ getAverageRank(java.lang.String,\ java.lang.String)
comment11.text=\r\n\ Write\ the\ method\ getAverageRank\ that\ has\ two\ parameters\:\ a\ string\ name,\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ a\ double\ representing\ the\ average\ rank\ of\ the\ name\ and\ gender\ over\ the\ selected\ files.\ \r\n\ It\ should\ return\ -1.0\ if\ the\ name\ is\ not\ ranked\ in\ any\ of\ the\ selected\ files.\r\n
comment12.params=
comment12.target=void\ testgetAverageRank()
comment13.params=year\ name\ gender
comment13.target=int\ getTotalBirthsRankedHigher(int,\ java.lang.String,\ java.lang.String)
comment13.text=\r\n\ Write\ the\ method\ getTotalBirthsRankedHigher\ that\ has\ three\ parameters\:\ an\ integer\ named\ year,\ \r\n\ a\ string\ named\ name,\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ returns\ an\ integer,\ the\ total\ number\ of\ births\ of\ those\ names\ with\ the\ same\ gender\ \r\n\ and\ same\ year\ who\ are\ ranked\ higher\ than\ name.\ \r\n
comment14.params=
comment14.target=void\ testgetTotalBirthsRankedHigher()
comment2.params=
comment2.target=void\ testtotalBirths()
comment3.params=year\ name\ gender
comment3.target=int\ getRank(int,\ java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Write\ the\ method\ named\ getRank\ that\ has\ three\ parameters\:\ an\ integer\ named\ year,\ \r\n\ a\ string\ named\ name,\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ returns\ the\ rank\ of\ the\ name\ in\ the\ file\ for\ the\ given\ gender,\ \r\n\ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\ If\ the\ name\ is\ not\ in\ the\ file,\ then\ -1\ is\ returned.\ \r\n
comment4.params=
comment4.target=void\ testgetRank()
comment5.params=year\ rank\ gender
comment5.target=java.lang.String\ getName(int,\ int,\ java.lang.String)
comment5.text=\r\n\ Write\ the\ method\ named\ getName\ that\ has\ three\ parameters\:\ an\ integer\ named\ year,\ \r\n\ an\ integer\ named\ rank,\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ returns\ the\ name\ of\ the\ person\ in\ the\ file\ at\ this\ rank,\ for\ the\ given\ gender,\ \r\n\ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\ If\ the\ rank\ does\ not\ exist\ in\ the\ file,\ then\ \u201CNO\ NAME\u201D\ is\ returned.\r\n
comment6.params=
comment6.target=void\ testgetName()
comment7.params=name\ year\ newyear\ gender
comment7.target=void\ whatisNameInYear(java.lang.String,\ int,\ int,\ java.lang.String)
comment7.text=\r\n\ What\ would\ your\ name\ be\ if\ you\ were\ born\ in\ a\ different\ year?\ \r\n\ Write\ the\ void\ method\ named\ whatIsNameInYear\ that\ has\ four\ parameters\:\ a\ string\ name,\ \r\n\ an\ integer\ named\ year\ representing\ the\ year\ that\ name\ was\ born,\ an\ integer\ named\ newYear\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ determines\ what\ name\ would\ have\ been\ named\ if\ they\ were\ born\ in\ a\ different\ year,\ \r\n\ based\ on\ the\ same\ popularity.\ That\ is,\ you\ should\ determine\ the\ rank\ of\ name\ in\ the\ year\ they\ were\ born,\ \r\n\ and\ then\ print\ the\ name\ born\ in\ newYear\ that\ is\ at\ the\ same\ rank\ and\ same\ gender.\r\n
comment8.params=
comment8.target=void\ testwhatisNameInYear()
comment9.params=name\ gender
comment9.target=int\ yearOfHighestRank(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Write\ the\ method\ yearOfHighestRank\ that\ has\ two\ parameters\:\ a\ string\ name,\ \r\n\ and\ a\ string\ named\ gender\ (F\ for\ female\ and\ M\ for\ male).\ \r\n\ This\ method\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ an\ integer,\ \r\n\ the\ year\ with\ the\ highest\ rank\ for\ the\ name\ and\ gender.\ \r\n\ If\ the\ name\ and\ gender\ are\ not\ in\ any\ of\ the\ selected\ files,\ it\ should\ return\ -1.\r\n
numComments=15
